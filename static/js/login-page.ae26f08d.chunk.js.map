{"version":3,"file":"static/js/login-page.ae26f08d.chunk.js","mappings":"yOAGaA,EAAMC,EAAAA,EAAAA,IAAU,qfAuBhBC,EAAYD,EAAAA,EAAAA,GAAS,6IAQrBE,GAAUF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAY,gEAKtBI,EAAYJ,EAAAA,EAAAA,MAAY,6HAQxBK,GAAYL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAa,8RAezBO,EAAaP,EAAAA,EAAAA,OAAa,oQAc1BQ,EAAOR,EAAAA,EAAAA,EAAQ,2G,oBC/D5B,EAX8BS,EAAAA,GAAW,CACrCC,MAAOD,EAAAA,KAEFC,MAAM,uBACNC,SAAS,qBACdC,SAAUH,EAAAA,KAELI,IAAI,EAAG,qDACPF,SAAS,0B,uCCEH,SAASG,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAgBpBC,EAAc,SAAAC,GAAO,OAAIC,EAAAA,OAAAA,KAAY,GAAD,OAAID,GAAW,EAEzD,OACI,UAACtB,EAAG,WACCmB,IAAW,SAACK,EAAA,EAAM,KACjBL,IACF,iCACA,SAACjB,EAAS,mDAEN,SAAC,KAAM,CACPuB,cAvBU,CAClBd,MAAO,GACPE,SAAU,IAsBFa,SAnBS,SAACC,EAAO,GAAoB,IAAjBC,EAAS,EAATA,UAC5BC,QAAQC,IAAIH,GACZX,EAASe,EAAAA,EAAAA,MAAiBJ,IAC1BP,GAAW,GACXQ,GACJ,EAeYI,iBAAkBC,EAAsB,UAExC,UAAC9B,EAAO,CAAC+B,aAAa,MAAK,WACnB,UAAC7B,EAAS,CAAC8B,QAAQ,QAAO,mBAE1B,SAAC7B,EAAS,CACF8B,KAAK,QACLC,KAAK,QACLC,YAAY,mBAEpB,SAAC,KAAY,CAACF,KAAK,OAAOG,OAAQlB,KAClC,UAAChB,EAAS,CAAC8B,QAAQ,WAAU,sBAEzB,SAAC7B,EAAS,CACN,eAAa,QACb8B,KAAK,WACLC,KAAK,WACLC,YAAY,iBAEpB,SAAC,KAAY,CAACF,KAAK,WAAWG,OAAQlB,KAE1C,SAACb,EAAU,CAAC6B,KAAK,SAAQ,yBAI7B,SAAC5B,EAAI,sCACL,SAACA,EAAI,WACD,SAAC,KAAI,CAAC+B,GAAG,YACLC,MAAO,CAAEC,eAAgB,OAAQC,SAAU,GAAIC,MAAO,WAAY,6BAS1F,C,gBC5Ea5C,EAAMC,EAAAA,EAAAA,IAAU,ySAKD4C,GCG5B,EARkB,WACd,OACA,UAAC,EAAG,YACA,SAAC9B,EAAS,IAAG,MAGrB,C","sources":["components/LoginForm/LoginForm.styled.jsx","services/schemaValidationLogin.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field  } from 'formik';\n\nexport const Box = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: flex;\n    text-align: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin-top: 200px;\n    max-width: 380px;\n    max-height: 340px;\n    background-color: #03c03c;\n    border-radius: 15px;\n    padding: 20px;\n    margin-left: auto;\n    margin-right: auto;\n    background-repeat: no-repeat;\n    background-position: 50% 50%;\n    background-size: cover;\n`;\n\nexport const FormTitle = styled.h3`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    margin-top: auto;\n`;\n\nexport const LogForm = styled(Form)`\n    display: block;\n    width: 320px;\n`;\n\nexport const LableForm = styled.label`\n    \n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 12px,\n`;\n\nexport const InputForm = styled(Field)`\n    display: flex;\n    border: 0px;\n    box-sizing: content-box;\n    outline: none;\n    padding: 10px;\n    flex-direction: column;\n    margin-bottom: 12px;\n    border-radius: 5px;\n    &:hover,\n    &:focus {\n        background-color: #9acfc2c1;\n    }\n`;\n\nexport const FormButton = styled.button`\n    padding: 10px 20px;\n    border-radius: 10px 2px;\n    border: 0px;\n    outline: none;\n    cursor: pointer;\n    &:hover,\n    &:focus {\n        outline: none;\n        background-color: #139397;\n        color: #ffffff;\n    }\n`;\n\nexport const Text = styled.p`\n    display:block;\n    width:100%;\n    margin: 0px;\n    text-decoration: none;\n`\n","import * as yup from 'yup';\n\nconst validationSchemaLogin = yup.object({\n    email: yup\n        .string()\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string()\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n});\n\nexport default validationSchemaLogin;\n\n","import { useState } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport { LableForm, Box, LogForm, FormTitle, InputForm, FormButton, Text } from \"./LoginForm.styled\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport  validationSchemaLogin  from \"../../services/schemaValidationLogin\";\nimport { useDispatch} from 'react-redux';\nimport  operations  from '../../redux/auth/authOperations';\nimport { Loader } from '../Loader/Loader';\n\n\n\nexport default function LoginForm() {\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false)\n\n\n    const initialValues = {\n        email: '',\n        password: '',\n    };\n\n    const handleSubmit = (values, { resetForm }) => {\n        console.log(values);\n        dispatch(operations.logIn(values));\n        setLoading(true);\n        resetForm();\n    };\n\n\n    const renderError = message => Notify.info(`${message}`);\n\n    return (\n        <Box>\n            {loading && <Loader/>}\n            {!loading && \n            <>\n            <FormTitle>Please enter your name and password</FormTitle>\n\n                <Formik\n                initialValues={initialValues}\n                onSubmit={handleSubmit}\n                validationSchema={validationSchemaLogin}\n                >\n                <LogForm autoComplete=\"off\">\n                        <LableForm htmlFor=\"email\">\n                            Email\n                        <InputForm\n                                name=\"email\"\n                                type=\"email\"\n                                placeholder=\"Your email\" />\n                    </LableForm>\n                        <ErrorMessage name=\"name\" render={renderError} />\n                        <LableForm htmlFor=\"password\">\n                            Password\n                            <InputForm\n                                aria-invalid=\"false\"\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Password\" />\n                    </LableForm>\n                        <ErrorMessage name=\"password\" render={renderError} />\n                            \n                    <FormButton type=\"submit\">Login</FormButton>\n                </LogForm>\n                </Formik>\n                    \n                <Text>Don`t have an account?</Text>\n                <Text>\n                    <Link to=\"/register\"\n                        style={{ textDecoration: \"none\", fontSize: 18, color: \"#b027da\" }}>\n                        Register\n                    </Link>\n                </Text>\n            </>\n            }\n            \n        </Box>\n    );\n};","import styled from '@emotion/styled';\nimport mainFood from \"../../images/homepage.jpg\";\n\nexport const Box = styled.div`\n    box-sizing: border-box;\n    height: 100vh;\n    margin: 0px;\n    flex-direction: row;\n    background-image: url(${mainFood});\n    background-repeat: no-repeat;\n    background-color: rgb(250, 250, 250);\n    background-size: cover;\n    background-position: center center;\n`;","import LoginForm from '../../components/LoginForm/LoginForm';\nimport {Box} from './LoginPage.styled'\n\nconst LoginPage = () => {\n    return (\n    <Box>\n        <LoginForm />;\n    </Box>\n    )\n};\n\nexport default LoginPage;"],"names":["Box","styled","FormTitle","LogForm","Form","LableForm","InputForm","Field","FormButton","Text","yup","email","required","password","min","LoginForm","dispatch","useDispatch","useState","loading","setLoading","renderError","message","Notify","Loader","initialValues","onSubmit","values","resetForm","console","log","operations","validationSchema","validationSchemaLogin","autoComplete","htmlFor","name","type","placeholder","render","to","style","textDecoration","fontSize","color","mainFood"],"sourceRoot":""}